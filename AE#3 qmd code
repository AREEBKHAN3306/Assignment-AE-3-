library(tidyverse)  
library(tidytext)   
library(textdata)   
library(ggplot2)   
library(dplyr)      

# Load the dataset
nobel_data <- read.csv("nobel-prize-winners-1.csv", stringsAsFactors = FALSE)

# Cleaning the dataset
nobel_cleaned <- nobel_data %>%
  filter(!is.na(motivation) & motivation != "") %>% 
  mutate(motivation = tolower(motivation)) %>%  
  distinct(name, motivation, .keep_all = TRUE)  

nobel_words <- nobel_cleaned %>%
  unnest_tokens(word, motivation, token = "words") %>%
  anti_join(stop_words) 

# Load Bing Sentiment Lexicon
bing_sentiment <- get_sentiments("bing")

# Matching words in the motivations with sentiment scores
nobel_sentiment <- nobel_words %>%
  inner_join(bing_sentiment, by = "word") %>%  
  group_by(name) %>% 
  summarise(positive = sum(sentiment == "positive"),  
            negative = sum(sentiment == "negative"),  
            .groups = "drop") %>%
  mutate(sentiment_score = positive - negative)  

head(nobel_sentiment)

# Visualizing sentiment score distribution
ggplot(nobel_sentiment, aes(x = sentiment_score)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Sentiment Scores in Nobel Prize Motivations",
       x = "Sentiment Score",
       y = "Count of Winners") +
  theme_minimal()

# Categorizing sentiment into three groups: Positive, Neutral, Negative
nobel_sentiment <- nobel_sentiment %>%
  mutate(sentiment_category = case_when(
    sentiment_score > 0 ~ "Positive",
    sentiment_score < 0 ~ "Negative",
    TRUE ~ "Neutral"
  ))

# Bar chart to show the overall distribution of sentiment categories
ggplot(nobel_sentiment, aes(x = sentiment_category, fill = sentiment_category)) +
  geom_bar() +
  labs(title = "Sentiment Categories in Nobel Prize Motivations",
       x = "Sentiment Type",
       y = "Number of Winners") +
  theme_minimal()

# Display a small sample of sentiment results
nobel_sentiment %>%
  select(name, sentiment_score, sentiment_category) %>%
  head(10) %>%
  knitr::kable()
